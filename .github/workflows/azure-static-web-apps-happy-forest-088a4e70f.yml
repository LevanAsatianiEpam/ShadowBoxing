name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: write  # Write permission for repository contents
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
          fetch-depth: 0  # Need full history for version determination
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      # Set up Git identity for potential commits
      - name: Set up Git identity
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      # Auto-increment version based on commit messages
      - name: Auto versioning
        id: versioning
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          node scripts/auto-version.js
          VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "New version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
      # Push version changes back to the repository using a PAT
      - name: Push version changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && env.VERSION != ''
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update version to ${{ env.VERSION }} [skip ci]"
          file_pattern: "package.json src/app/services/version.service.ts"

      # Install OIDC client
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      
      # Build and deploy
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_FOREST_088A4E70F }}
          action: "upload"
          app_location: "/" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "dist/shadow-boxing/browser" # Updated output location 
          github_id_token: ${{ steps.idtoken.outputs.result }}
      
      # Create tag for the new version using GitHub API
      - name: Create Release Tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && env.VERSION != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = process.env.VERSION;
            const tagName = `v${version}`;
            const sha = context.sha;
            
            console.log(`Creating tag ${tagName} for commit ${sha}`);
            
            try {
              // Create the tag reference
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tagName}`,
                sha: sha
              });
              console.log(`Successfully created tag ${tagName}`);
            } catch (error) {
              if (error.message.includes('Reference already exists')) {
                console.log(`Tag ${tagName} already exists, skipping`);
              } else {
                throw error;
              }
            }

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
